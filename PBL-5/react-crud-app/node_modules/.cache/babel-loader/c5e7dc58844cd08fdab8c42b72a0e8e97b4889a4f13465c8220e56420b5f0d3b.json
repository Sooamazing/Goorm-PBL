{"ast":null,"code":"var _jsxFileName = \"/Users/goorm/Documents/Goorm-PBL/PBL-5/react-crud-app/src/components/AlertBanner.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlertBanner = ({\n  keyword,\n  expenses,\n  clickBtn,\n  setClickBtn\n}) => {\n  _s();\n  const [alert, setAlert] = useState(true);\n  let keyKorean = \"\";\n  // const tempClickBtn = clickBtn;\n\n  // console.log(tempClickBtn);\n\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      setAlert(false);\n    }, 1000);\n    return () => {\n      clearTimeout(timer);\n      setClickBtn(false);\n      setAlert(true);\n    };\n    //useEffect에서 dependency 사용보다 그냥 그 버튼에 함수 넣어주는 걸로 구현하는 게 더 좋음. (버튼을 누를 때마다 이벤트 발생하고 싶다면)\n  }, [clickBtn]);\n  switch (keyword) {\n    case \"CREATE\":\n      keyKorean = \"아이템이 생성되었습니다.\";\n      break;\n    case \"EDIT\":\n      keyKorean = \"아이템이 수정되었습니다.\";\n      break;\n    case \"DELETE\":\n      keyKorean = \"아이템이 삭제되었습니다.\";\n      break;\n    case \"RETRY\":\n      keyKorean = \"다시 입력해 주세요.\";\n      break;\n    default:\n      break;\n  }\n  if (keyKorean === \"\") {\n    return;\n  }\n  // setClickBtn(false);\n\n  return alert === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alertMessage \" + keyword,\n    children: keyKorean\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this) : null;\n};\n_s(AlertBanner, \"4J7z1q3wThBmRLMseD3uGw3MtCk=\");\n_c = AlertBanner;\nexport default AlertBanner;\nvar _c;\n$RefreshReg$(_c, \"AlertBanner\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","AlertBanner","keyword","expenses","clickBtn","setClickBtn","_s","alert","setAlert","keyKorean","timer","setTimeout","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/goorm/Documents/Goorm-PBL/PBL-5/react-crud-app/src/components/AlertBanner.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst AlertBanner = ({ keyword, expenses, clickBtn, setClickBtn }) => {\n  const [alert, setAlert] = useState(true);\n  let keyKorean = \"\";\n  // const tempClickBtn = clickBtn;\n\n  // console.log(tempClickBtn);\n\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      setAlert(false);\n    }, 1000);\n    return () => {\n      clearTimeout(timer);\n      setClickBtn(false);\n      setAlert(true);\n    };\n    //useEffect에서 dependency 사용보다 그냥 그 버튼에 함수 넣어주는 걸로 구현하는 게 더 좋음. (버튼을 누를 때마다 이벤트 발생하고 싶다면)\n  }, [clickBtn]);\n\n  switch (keyword) {\n    case \"CREATE\":\n      keyKorean = \"아이템이 생성되었습니다.\";\n      break;\n    case \"EDIT\":\n      keyKorean = \"아이템이 수정되었습니다.\";\n      break;\n    case \"DELETE\":\n      keyKorean = \"아이템이 삭제되었습니다.\";\n      break;\n    case \"RETRY\":\n      keyKorean = \"다시 입력해 주세요.\";\n      break;\n    default:\n      break;\n  }\n\n  if (keyKorean === \"\") {\n    return;\n  }\n  // setClickBtn(false);\n\n  return alert === true ? (\n    <div className={\"alertMessage \" + keyword}>{keyKorean}</div>\n  ) : null;\n};\n\nexport default AlertBanner;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,WAAW,GAAGA,CAAC;EAAEC,OAAO;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACpE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,IAAIW,SAAS,GAAG,EAAE;EAClB;;EAEA;;EAEAZ,SAAS,CAAC,MAAM;IACd,IAAIa,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC3BH,QAAQ,CAAC,KAAK,CAAC;IACjB,CAAC,EAAE,IAAI,CAAC;IACR,OAAO,MAAM;MACXI,YAAY,CAACF,KAAK,CAAC;MACnBL,WAAW,CAAC,KAAK,CAAC;MAClBG,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC;IACD;EACF,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,QAAQF,OAAO;IACb,KAAK,QAAQ;MACXO,SAAS,GAAG,eAAe;MAC3B;IACF,KAAK,MAAM;MACTA,SAAS,GAAG,eAAe;MAC3B;IACF,KAAK,QAAQ;MACXA,SAAS,GAAG,eAAe;MAC3B;IACF,KAAK,OAAO;MACVA,SAAS,GAAG,aAAa;MACzB;IACF;MACE;EACJ;EAEA,IAAIA,SAAS,KAAK,EAAE,EAAE;IACpB;EACF;EACA;;EAEA,OAAOF,KAAK,KAAK,IAAI,gBACnBP,OAAA;IAAKa,SAAS,EAAE,eAAe,GAAGX,OAAQ;IAAAY,QAAA,EAAEL;EAAS;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC,GAC1D,IAAI;AACV,CAAC;AAACZ,EAAA,CA5CIL,WAAW;AAAAkB,EAAA,GAAXlB,WAAW;AA8CjB,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}