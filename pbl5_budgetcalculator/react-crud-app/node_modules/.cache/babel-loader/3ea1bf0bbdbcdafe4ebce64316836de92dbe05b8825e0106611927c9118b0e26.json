{"ast":null,"code":"var _jsxFileName = \"/Users/goorm/Documents/Goorm-PBL/PBL-5/react-crud-app/src/pages/FormPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport AlertBanner from \"../components/AlertBanner\";\nimport ExpensesList from \"../components/ExpensesList\";\nimport Calculator from \"../components/Calculator\";\nimport InputForm from \"../components/InputForm\";\n\n//로컬스토리지 이용, 저장된 값 불러오기\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialExpenses = JSON.parse(localStorage.getItem(\"Expenses\")) || [];\n\n//... ㅠㅠ shop 파일은 왜 안 될가요 ㅠㅠ 엉엉... ㅠㅠ 이걸 보면서 해야 뭘.... 가늠을 하고 공부를 할 텐데 눈물...\n//JSX? 얘는 왜 꼭 return에서 뭘로 감싸줘야 한다는 걸까? provider도 .. 진짜.... 뭔 소린지 잘 모름...\n//SummaryPage에서 optionRender는 왜 초기화해 주는 부분은 없는 거지? .. 어렵다 어려워.. render... 에 따르 거겠지? ... 으음.... 근데 여긴 useEffect가 없는데.. 오.. 뭐지...\n\n/**\n * 구현할 때 TDD로 보여주시나요? 해 보고 싶었는데... 구현하는 것도 어려워서 실패.... 보통 구현을 어떻게 할지 생각하고 TDD를 같이 짜는 거죠? ..으음.. 안 짜봐서 뭐가 먼저고 어쩌구인지 상상이 어렵.\n *\n *\n * 알람 배너 확인.. 왜 저기에.. 저게 들어가면..? ...\n * // ....왜 여기에... setClickBtn(false) 넣으면... 되는 거지...? 충격... 와.. 뭐임... 순서가 어떻게 되는 거지? ..... 아..... 맨 처음에 이걸 시행하는데 setTimeout이라 2초 후에 false되는 거지!?!?!?\n * \n *\n * ...key라는 변수 이름은... 고유값인 거임? 근데 왜... 아무 ... 경고도 안 띄워주냐~~~..하. .ㅋ.. key 변수 설정했다가 어쩐지.. 알림이 안 되더라... ㅠㅠ....내 시간.....엉엉....  keyword라고 진짜 혹시나.. 마지막에 고쳐서야....\n *===> 안 된다고 콘솔에 뭔가 오류가 뜨긴.. 뜹니다 하하.. VSC에서는 안 잡는데 다르 곳에서 충돌이 있나봐여.\n *\n * localstorage 초기값 불러오는 걸 컴포넌트 바깥에 선언한 이유?\n *\n * \n * - 정확히.. useState가 바뀔 때 어떤 게 렌더링되는 건지? State를 가지고 있는 모든 컴포넌트? (컴포넌트 기준은 맞는 건지?)\n- useEffect 안 실행 내용 안 쓰고 디펜던시만 주는 건 그냥 죽은 코드 맞는지?\n *\n *JSX에서 div로 감싸야 하는데 싫으면 <REACT.FRAGMENT> / <></> 사용 가능\n * \n * \n * component로 prop 내려준 함수는 onClick={(e => {handleClick(e);}) 이런식으로 사용 ㅇ 근데 생성한 걸 쓰면 {handleClick} ... 이 차이는 JSX 문법 차이인 거 같은데... 으음.. 정확히 뭘 검색해서 공부하면 나오나?\n * }\n * \n * \n * \n *e.target[\"category\"].value 같은 식으로 말고! 뭔가 좀 더 동적으로..?\n *\n * - 현재 수정 버튼 누르기만 하면 수정이라고 뜸! => 실제로 수정 버튼 누르고 제출했을 때 알람이 나오게 하려면 어떻게.. 그냥 입력과 수정 입력과 차이를 주지? (+수정할 때는 blur돼도 저장)\n *\n * google icon 이용\n * onChange 및 defaultValue 활용\n *\n * input id와 label의 htmlFor을 같게!\n *\n */\n\nfunction FormPage() {\n  _s();\n  const [expenses, setExpenses] = useState(initialExpenses);\n  const [keyword, setKeyword] = useState(\"\");\n  const [newEditValue, setNewEditValue] = useState();\n  const [mode, setMode] = useState(\"CREATE\");\n  const [clickBtn, setClickBtn] = useState(false);\n  let editValueId = 0;\n\n  //배열인 경우...똑같은 배열이라도 다른 값으로 인식할 수 있음. -> 추가 공부하기\n  useEffect(() => {}, [expenses]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"Container\",\n      children: [/*#__PURE__*/_jsxDEV(AlertBanner, {\n        keyword: keyword,\n        expenses: expenses,\n        clickBtn: clickBtn,\n        setClickBtn: setClickBtn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uC608\\uC0B0 \\uACC4\\uC0B0\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"BudgetCalculatorForm\",\n        children: [/*#__PURE__*/_jsxDEV(InputForm, {\n          setClickBtn: setClickBtn,\n          mode: mode,\n          setMode: setMode,\n          setKeyword: setKeyword,\n          keyword: keyword,\n          expenses: expenses,\n          setExpenses: setExpenses,\n          newEditValue: newEditValue,\n          editValueId: editValueId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ExpensesList, {\n          expenses: expenses,\n          setNewEditValue: setNewEditValue,\n          setMode: setMode,\n          setExpenses: setExpenses,\n          setClickBtn: setClickBtn,\n          setKeyword: setKeyword,\n          editValueId: editValueId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Calculator, {\n        expenses: expenses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(FormPage, \"u7ZWZiMWYHZeLIR2bCk8Pn1nrX4=\");\n_c = FormPage;\nexport default FormPage;\nvar _c;\n$RefreshReg$(_c, \"FormPage\");","map":{"version":3,"names":["React","useEffect","useState","AlertBanner","ExpensesList","Calculator","InputForm","jsxDEV","_jsxDEV","initialExpenses","JSON","parse","localStorage","getItem","FormPage","_s","expenses","setExpenses","keyword","setKeyword","newEditValue","setNewEditValue","mode","setMode","clickBtn","setClickBtn","editValueId","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/goorm/Documents/Goorm-PBL/PBL-5/react-crud-app/src/pages/FormPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport AlertBanner from \"../components/AlertBanner\";\nimport ExpensesList from \"../components/ExpensesList\";\nimport Calculator from \"../components/Calculator\";\nimport { Expenses } from \"../Types\";\nimport InputForm from \"../components/InputForm\";\n\n//로컬스토리지 이용, 저장된 값 불러오기\nconst initialExpenses = JSON.parse(localStorage.getItem(\"Expenses\")) || [];\n\n//... ㅠㅠ shop 파일은 왜 안 될가요 ㅠㅠ 엉엉... ㅠㅠ 이걸 보면서 해야 뭘.... 가늠을 하고 공부를 할 텐데 눈물...\n//JSX? 얘는 왜 꼭 return에서 뭘로 감싸줘야 한다는 걸까? provider도 .. 진짜.... 뭔 소린지 잘 모름...\n//SummaryPage에서 optionRender는 왜 초기화해 주는 부분은 없는 거지? .. 어렵다 어려워.. render... 에 따르 거겠지? ... 으음.... 근데 여긴 useEffect가 없는데.. 오.. 뭐지...\n\n/**\n * 구현할 때 TDD로 보여주시나요? 해 보고 싶었는데... 구현하는 것도 어려워서 실패.... 보통 구현을 어떻게 할지 생각하고 TDD를 같이 짜는 거죠? ..으음.. 안 짜봐서 뭐가 먼저고 어쩌구인지 상상이 어렵.\n *\n *\n * 알람 배너 확인.. 왜 저기에.. 저게 들어가면..? ...\n * // ....왜 여기에... setClickBtn(false) 넣으면... 되는 거지...? 충격... 와.. 뭐임... 순서가 어떻게 되는 거지? ..... 아..... 맨 처음에 이걸 시행하는데 setTimeout이라 2초 후에 false되는 거지!?!?!?\n * \n *\n * ...key라는 변수 이름은... 고유값인 거임? 근데 왜... 아무 ... 경고도 안 띄워주냐~~~..하. .ㅋ.. key 변수 설정했다가 어쩐지.. 알림이 안 되더라... ㅠㅠ....내 시간.....엉엉....  keyword라고 진짜 혹시나.. 마지막에 고쳐서야....\n *===> 안 된다고 콘솔에 뭔가 오류가 뜨긴.. 뜹니다 하하.. VSC에서는 안 잡는데 다르 곳에서 충돌이 있나봐여.\n *\n * localstorage 초기값 불러오는 걸 컴포넌트 바깥에 선언한 이유?\n *\n * \n * - 정확히.. useState가 바뀔 때 어떤 게 렌더링되는 건지? State를 가지고 있는 모든 컴포넌트? (컴포넌트 기준은 맞는 건지?)\n- useEffect 안 실행 내용 안 쓰고 디펜던시만 주는 건 그냥 죽은 코드 맞는지?\n *\n *JSX에서 div로 감싸야 하는데 싫으면 <REACT.FRAGMENT> / <></> 사용 가능\n * \n * \n * component로 prop 내려준 함수는 onClick={(e => {handleClick(e);}) 이런식으로 사용 ㅇ 근데 생성한 걸 쓰면 {handleClick} ... 이 차이는 JSX 문법 차이인 거 같은데... 으음.. 정확히 뭘 검색해서 공부하면 나오나?\n * }\n * \n * \n * \n *e.target[\"category\"].value 같은 식으로 말고! 뭔가 좀 더 동적으로..?\n *\n * - 현재 수정 버튼 누르기만 하면 수정이라고 뜸! => 실제로 수정 버튼 누르고 제출했을 때 알람이 나오게 하려면 어떻게.. 그냥 입력과 수정 입력과 차이를 주지? (+수정할 때는 blur돼도 저장)\n *\n * google icon 이용\n * onChange 및 defaultValue 활용\n *\n * input id와 label의 htmlFor을 같게!\n *\n */\n\nfunction FormPage() {\n  const [expenses, setExpenses] = useState<Expenses[]>(initialExpenses);\n  const [keyword, setKeyword] = useState(\"\");\n  const [newEditValue, setNewEditValue] = useState<Expenses>();\n  const [mode, setMode] = useState(\"CREATE\");\n  const [clickBtn, setClickBtn] = useState(false);\n  let editValueId = 0;\n\n  //배열인 경우...똑같은 배열이라도 다른 값으로 인식할 수 있음. -> 추가 공부하기\n  useEffect(() => {}, [expenses]);\n\n  return (\n    <div>\n      <main className=\"Container\">\n        <AlertBanner\n          keyword={keyword}\n          expenses={expenses}\n          clickBtn={clickBtn}\n          setClickBtn={setClickBtn}\n        />\n        <h2>예산 계산기</h2>\n        <article className=\"BudgetCalculatorForm\">\n          <InputForm\n            setClickBtn={setClickBtn}\n            mode={mode}\n            setMode={setMode}\n            setKeyword={setKeyword}\n            keyword={keyword}\n            expenses={expenses}\n            setExpenses={setExpenses}\n            newEditValue={newEditValue}\n            editValueId={editValueId}\n          />\n          <ExpensesList\n            expenses={expenses}\n            setNewEditValue={setNewEditValue}\n            setMode={setMode}\n            setExpenses={setExpenses}\n            setClickBtn={setClickBtn}\n            setKeyword={setKeyword}\n            editValueId={editValueId}\n          />\n        </article>\n        <Calculator expenses={expenses} />\n      </main>\n    </div>\n  );\n}\n\nexport default FormPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}